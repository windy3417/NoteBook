<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>